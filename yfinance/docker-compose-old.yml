version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres_airflow
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - airflow_network

  redis:
    image: redis:7-alpine
    container_name: redis_airflow
    ports:
      - "6379:6379"
    networks:
      - airflow_network

  mongo_db:
    image: mongo:6
    container_name: mongodb_airflow
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    command: mongod --auth
    restart: always
    networks:
      - airflow_network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo_db
      ME_CONFIG_MONGODB_PORT: 27017
    depends_on:
      - mongo_db
    restart: always
    networks:
      - airflow_network

  airflow-init:
    image: apache/airflow:2.9.0-python3.9
    container_name: airflow_init
    command: |
      bash -c "
        airflow db migrate
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
      "
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres_airflow/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__FERNET_KEY: 'nv8v7Cj3fJ7vF7F8Fn8Fn8Fn8Fn8Fn8Fn8Fn8Fn8Fn8F'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - airflow_network

  airflow-build:
    build: .
    image: airflow-custom
    command: echo "Build complete"

  airflow-webserver:
    image: airflow-custom
    container_name: airflow_webserver
    command: webserver
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres_airflow/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__FERNET_KEY: 'nv8v7Cj3fJ7vF7F8Fn8Fn8Fn8Fn8Fn8Fn8Fn8Fn8Fn8F'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./tickers.xlsx:/opt/airflow/tickers.xlsx
      - ./requirements.txt:/opt/airflow/requirements.txt
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      airflow-build:
        condition: service_completed_successfully
    restart: always
    networks:
      - airflow_network

  airflow-scheduler:
    image: airflow-custom
    container_name: airflow_scheduler
    command: scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres_airflow/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__FERNET_KEY: 'nv8v7Cj3fJ7vF7F8Fn8Fn8Fn8Fn8Fn8Fn8Fn8Fn8Fn8F'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./tickers.xlsx:/opt/airflow/tickers.xlsx
      - ./requirements.txt:/opt/airflow/requirements.txt
    depends_on:
      airflow-webserver:
        condition: service_started
    restart: always
    networks:
      - airflow_network

volumes:
  postgres_data:
  mongodb_data:

networks:
  airflow_network:
    driver: bridge